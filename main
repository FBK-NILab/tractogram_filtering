#!/bin/bash

set -e
set -x

echo "STARTING TRACTOGRAM FILTERING PIPELINE..."
	
if [ -d 'output/' ]; then 
  rm -r output
fi

if [ -d 'tmp_tractogram_filtering/' ]; then 
  rm -r tmp_tractogram_filtering
fi

# fix json config
CFG=`cat config.json | jq --arg resample_points true '. + {resample_points: $resample_points}'`
echo $CFG > config.json
jq --arg return_trk true '. + {return_trk: $return_trk}'
jq --arg task classification '. + {task: $task}'

#cat <<EOF > config.json 
#{
#    "trk": "track.trk",
#    "t1": "t1.nii.gz",
#    "resample_points": true,
#    "task": "classification",
#    "return_trk": true
#}
#EOF

singularity exec -e --nv docker://pietroastolfi/tractogram-filtering:gpu tractogram_filtering.py -config config.json

echo "PREPARING OUTPUTS..."

mkdir output
mv tmp_tractogram_filtering/output/track.trk output/.
mkdir output/plausible_idxs
mv tmp_tractogram_filtering/output/idxs_plausible.txt output/plausible_idxs/.
mkdir output/non_plausible_idxs
mv tmp_tractogram_filtering/output/idxs_non-plausible.txt output/non_plausible_idxs/.
